name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Cache virtualenv
      uses: actions/cache@v2
      with:
        path: |
          .venv
          ~/.cache/pip
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
    
    - name: Install system dependencies
      run: |
        make install-system-deps
    
    - name: Setup virtual environment
      run: |
        make venv
    
    - name: Run Python linting
      run: |
        make pylint
    
    - name: Run C++ linting
      run: |
        make lint
    
    - name: Check code formatting
      run: |
        make format
        echo "Checking git diff for non-C++ files:"
        git diff ':!*.h' ':!*.cpp'
        echo "Checking git diff for C++ files (excluding includes):"
        git diff '*.h' '*.cpp' > cpp_diff.txt
        echo "C++ diff content:"
        cat cpp_diff.txt
        echo "C++ diff without includes:"
        cat cpp_diff.txt | grep -v '^[+-]#include' || true
        # Проверяем только изменения в форматировании, игнорируя порядок include директив
        git diff --exit-code ':!*.h' ':!*.cpp' || \
          (echo "Code formatting issues found in non-C++ files. Run 'make format' locally" && exit 1)
        if [ -s cpp_diff.txt ]; then
          cat cpp_diff.txt | grep -v '^[+-]#include' | grep '^[+-]' && \
            (echo "Code formatting issues found in C++ files (excluding include order). Run 'make format' locally" && exit 1) || true
        fi
    
    - name: Run tests
      run: |
        make test
    
    # - name: Build firmware
    #   run: |
    #     make build 