[env:esp32cam]
platform = espressif32@^6.3.2
board = esp32cam
framework = arduino
monitor_speed = 115200

; Set higher frequencies for better performance
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L

; Increase upload speed
upload_speed = 921600

; Partition scheme with more space for app
board_build.partitions = huge_app.csv

; Monitor flags
monitor_rts = 0
monitor_dtr = 0

; Load environment variables from .env file
extra_scripts = pre:load_env.py

; ============= Build Configuration =============
; These are default values that can be overridden via build_firmware.sh
; or by setting PLATFORMIO_BUILD_FLAGS environment variable
;
; Available options:
; VIDEO_PROTOCOL:
;   - HTTP    : Standard HTTP streaming
;   - RTSP    : Real Time Streaming Protocol
;   - UDP     : User Datagram Protocol streaming
;   - WebRTC  : Web Real-Time Communication
build_flags = 
    -DVIDEO_PROTOCOL=HTTP
    
;   CONTROL_PROTOCOL:
;   - HTTP      : REST API control
;   - UDP       : UDP-based control
;   - WebSocket : WebSocket control interface
    -DCONTROL_PROTOCOL=HTTP
    
;   CAMERA_RESOLUTION:
;   - QQVGA  : 160x120
;   - QVGA   : 320x240
;   - VGA    : 640x480  (default)
;   - SVGA   : 800x600
;   - XGA    : 1024x768
;   - SXGA   : 1280x1024
;   - UXGA   : 1600x1200
    -DCAMERA_RESOLUTION=VGA
    
;   JPEG_QUALITY: 10-60 (lower is better quality but larger size)
    -DJPEG_QUALITY=10
    
;   ENABLE_METRICS: 0 or 1 (enables performance metrics collection)
    -DENABLE_METRICS=0
    
;   RAW_MODE: 0 or 1 (enables raw data mode without JPEG compression)
    -DRAW_MODE=0

; Note: To override these settings, use build_firmware.sh:
; ./build_firmware.sh --video=RTSP --control=WebSocket --resolution=SVGA --quality=30 --metrics=1 --raw=0

; Library dependencies
lib_deps =
    https://github.com/me-no-dev/ESPAsyncWebServer.git
    https://github.com/me-no-dev/AsyncTCP.git
    bblanchon/ArduinoJson@^6.21.3

build_unflags =
    -DARDUINO_USB_MODE
    -DARDUINO_USB_CDC_ON_BOOT

; Conditional build flags for metrics
[env:esp32cam_with_metrics]
extends = env:esp32cam
build_flags = 
    ${env:esp32cam.build_flags}
    -DENABLE_METRICS=1